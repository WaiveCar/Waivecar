@import '~styles/mixins';

$button-width                : 43px; // The width of the button area
$button-height               : 45px; // The height of the button area
$bar-thickness               : 2px;  // The thickness of the button bars
$button-pad                  : 12px; // The left/right padding between button area and bars.
$button-bar-space            : 3px;  // The spacing between button bars
$button-transistion-duration : 0.3s; // The transition duration

/**
 * Toggle Switch Globals
 *
 * All switches should take on the class `c-hamburger` as well as their
 * variant that will give them unique properties. This class is an overview
 * class that acts as a reset for all versions of the icon.
 */

.hamburger {
  display            : block;
  position           : relative;
  overflow           : hidden;
  margin             : 9px;
  padding            : 0;
  width              : $button-width;
  height             : $button-height;
  font-size          : 0;
  text-indent        : -9999px;
  -webkit-appearance : none;
  -moz-appearance    : none;
  appearance         : none;
  box-shadow         : none;
  border-radius      : none;
  border             : none;
  cursor             : pointer;
  transition         : background $button-transistion-duration;
  &:before {
    content                     : "";
    position                    : absolute;
    top                         : 2px;
    left                        : 0px;
    width                       : $button-width;
    height                      : $button-width;
    border-radius               : 50%;
    background                  : rgba(255, 255, 255, 0.22);
    -webkit-transition          : all;
    -o-transition               : all;
    transition                  : all;
    -webkit-transition-duration : $button-transistion-duration;
    transition-duration         : $button-transistion-duration;
    -webkit-backface-visibility : hidden;
    -moz-backface-visibility    : hidden;
    backface-visibility         : hidden;
    -webkit-transform           : scale(0);
    -ms-transform               : scale(0);
    -o-transform                : scale(0);
    transform                   : scale(0);
    z-index                     : 0;
  }
  &.active {
    &:before {
      -webkit-transform : scale(1);
      -ms-transform     : scale(1);
      -o-transform      : scale(1);
      transform         : scale(1);
    }
  }
}

.hamburger:focus {
  outline : none;
}

.hamburger span {
  display    : block;
  position   : absolute;
  top        : ($button-height / 2) - ($bar-thickness / 2);
  left       : $button-pad;
  right      : $button-pad;
  height     : $bar-thickness;
  background : rgb(255,255,255);
}

.hamburger span::before,
.hamburger span::after {
  position         : absolute;
  display          : block;
  left             : 0;
  width            : 100%;
  height           : $bar-thickness;
  background-color : #fff;
  content          : "";
}

.hamburger span::before {
  top : -$bar-thickness - $button-bar-space;
}

.hamburger span::after {
  bottom : -$bar-thickness - $button-bar-space;
}

/**
 * Style 1
 *
 * Rotating hamburger icon (rot), that simply rotates 90 degrees when activated.
 * Nothing too fancy, simple transition.
 */

.hamburger--rot span {
  transition : transform $button-transistion-duration;
}

/* active state, i.e. menu open */

.hamburger--rot.active {
  background-color : darken(rgb(40,170,220), 20%);
}

.hamburger--rot.active span {
  transform : rotate(90deg);
}

/**
 * Style 2
 *
 * Hamburger to "x" (htx). Takes on a hamburger shape, bars slide
 * down to center and transform into an "x".
 */

.hamburger--htx span {
  transition : background 0s $button-transistion-duration;
}

.hamburger--htx span::before,
.hamburger--htx span::after {
  transition-duration : $button-transistion-duration, $button-transistion-duration;
  transition-delay    : $button-transistion-duration, 0s;
}

.hamburger--htx span::before {
  transition-property : top, transform;
}

.hamburger--htx span::after {
  transition-property : bottom, transform;
}

/* active state, i.e. menu open */

.hamburger--htx.active span {
  background : none;
}

.hamburger--htx.active span::before {
  top       : 0;
  transform : rotate(45deg);
}

.hamburger--htx.active span::after {
  bottom    : 0;
  transform : rotate(-45deg);
}

.hamburger--htx.active span::before,
.hamburger--htx.active span::after {
  transition-delay : 0s, $button-transistion-duration;
}

/**
 * Style 3
 *
 * Hamburger to left-arrow (htla). Hamburger menu transforms to a left-pointing
 * arrow. Usually indicates an off canvas menu sliding in from left that
 * will be close on re-click of the icon.
 */
.hamburger--htla span {
  transition : transform $button-transistion-duration;
}

.hamburger--htla span::before {
  transform-origin : top right;
  transition       : transform $button-transistion-duration, width $button-transistion-duration, top $button-transistion-duration;
}

.hamburger--htla span::after {
  transform-origin : bottom right;
  transition       : transform $button-transistion-duration, width $button-transistion-duration, bottom $button-transistion-duration;
}

/* active state, i.e. menu open */

.hamburger--htla.active span {
  transform : rotate(180deg);
}

.hamburger--htla.active span::before,
.hamburger--htla.active span::after {
  width : 50%;
}

.hamburger--htla.active span::before {
  top       : 0;
  transform : translateX($button-width/2 - $button-pad + $bar-thickness) translateY($bar-thickness/2) rotate(45deg);
}

.hamburger--htla.active span::after {
  bottom    : 0;
  transform : translateX($button-width/2 - $button-pad + $bar-thickness) translateY(-$bar-thickness/2) rotate(-45deg);
}

/**
 * Style 4
 *
 * Hamburger to right-arrow (htra). Hamburger menu transforms to a
 * right-pointing arrow. Usually indicates an off canvas menu sliding in from
 * right that will be close on re-click of the icon.
 */

.hamburger--htra span {
  transition : transform $button-transistion-duration;
}

.hamburger--htra span::before {
  transform-origin : top left;
  transition       : transform $button-transistion-duration, width $button-transistion-duration, top $button-transistion-duration;
}

.hamburger--htra span::after {
  transform-origin : bottom left;
  transition       : transform $button-transistion-duration, width $button-transistion-duration, bottom $button-transistion-duration;
}

/* active state, i.e. menu open */

.hamburger--htra.active span {
  transform : rotate(180deg);
}

.hamburger--htra.active span::before,
.hamburger--htra.active span::after {
  width : 50%;
}

.hamburger--htra.active span::before {
  top       : 0;
  transform : translateX(-$bar-thickness) translateY($bar-thickness/2) rotate(-45deg);
}

.hamburger--htra.active span::after {
  bottom    : 0;
  transform : translateX(-$bar-thickness) translateY(-$bar-thickness/2) rotate(45deg);
}