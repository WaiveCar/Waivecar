#!/bin/bash
# Exit status = 0 if success, non-zero if error


# Exit at first failure
set -e

DEPLOY=false

function deploy {
    echo "`date -u `: Starting deploy on ${REMOTE_HOST}"

    echo -e "Host ${REMOTE_HOST}\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    scp -i deployment/build/ssh/id_rsa deployment/build/artifacts/${PACKAGE_NAME}_${TRAVIS_COMMIT}.tgz ${REMOTE_USER}@${REMOTE_HOST}:/tmp
    scp -i deployment/build/ssh/id_rsa deployment/build/scripts/deploy_remote ${REMOTE_USER}@${REMOTE_HOST}:/tmp/${PACKAGE_NAME}_${TRAVIS_COMMIT}.deploy_remote
    ssh -i deployment/build/ssh/id_rsa ${REMOTE_USER}@${REMOTE_HOST} STRICT_VERSION_CHECK=${STRICT_VERSION_CHECK} BRANCHING_MODEL=${BRANCHING_MODEL} TRAVIS_NODE_VERSION=${TRAVIS_NODE_VERSION} INIT_SCRIPT=${INIT_SCRIPT} PACKAGE_NAME=${PACKAGE_NAME} TRAVIS_COMMIT=${TRAVIS_COMMIT} REMOTE_DIR=${REMOTE_DIR_ADMIN} /tmp/${PACKAGE_NAME}_${TRAVIS_COMMIT}.deploy_remote
    ssh -i deployment/build/ssh/id_rsa ${REMOTE_USER}@${REMOTE_HOST} rm /tmp/${PACKAGE_NAME}_${TRAVIS_COMMIT}.deploy_remote

    echo "`date -u `: deploy done"
}


if [ "${TRAVIS_PULL_REQUEST}" != "false" ]; then
    # Pull requests
    DEPLOY=false
elif [ "${TRAVIS_BRANCH}" == "admin/development" ]; then
    REMOTE_HOST=${REMOTE_HOST_DEV}
    DEPLOY=true
    DIR=app
elif [ "${TRAVIS_BRANCH}" == "admin/staging" ]; then
    REMOTE_HOST=${REMOTE_HOST_STAG}
    DEPLOY=true
    DIR=dist
elif [ "${TRAVIS_BRANCH}" == "admin/master" ]; then
    REMOTE_HOST=${REMOTE_HOST_PROD}
    DEPLOY=true
    DIR=dist
else
    # Other branches
    DEPLOY=false
fi

if [ "${DEPLOY}" == "false" ]; then
    exit 0
fi

echo "`date -u `: Starting deploy"
deploy 
echo "`date -u `: deploy done"

