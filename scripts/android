#!/bin/bash
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

help() {
  echo verbose find restart unfuckup clear remove build install install_release stop start
  exit
}

cmd=$( basename $0 )
suffix=${cmd#android}
if [ "$suffix" ]; then
  suffix=${cmd#android-}
  shift
  $DIR/android $suffix $*
  exit 0
fi

. $DIR/common.sh
[ "$#" -lt 1 ] && help

stop=
start=

for i in $*; do
  case $1 in
    verbose) set -x ;;
    prebuild) 
      prebuild
      exit
      ;;
    debug) export DBG="strace -f -q -s 100 -o /tmp/app.trc " ;;
    find) find=1 ;;
    stop) stop=1 ;;
    start) start=1 ;;
    restart) 
      start=1
      stop=1 
      ;;
    clear) clear=1 ;; 
    unfuckup) 
      unfuckup=1 ;;
    remove) 
      remove=1 
      start=
    ;;
    build) 
      build=1 
    ;;
    install) install=1 ;;
    install_release) install_release=1 ;;
    *)
      echo "$1 not understood"
      help
      ;;
  esac

  case $1 in
    clear|install|install_release) 
      start=1
      stop=1
      ;;
    remove) 
      stop=1
      ;;
  esac

  shift
done

[ "$find" ] && get_device
[ "$unfuckup" ] && unfuckup
[ "$stop" ] && wrap stop
[ "$build" ] && build
[ "$remove" ] && wrap uninstall
if [ "$install" ]; then
  path=''
  build=''
  pathList="$DIR/../platforms/android/build/outputs/apk/debug $DIR/../platforms/android/build/outputs/apk $DIR/../platforms/android/app/build/outputs/apk/debug"
  buildList="android-debug.apk app-debug.apk"

  for i in $pathList; do
    [ -z "$path" -a -d "$i" ] && path=$i
  done

  if [ -z "$path" ]; then 
    echo "Can't find the paths $pathList. Bailing"
    exit -1
  fi

  for i in $buildList; do
    [ -z "$build" -a -e "$path/$i" ] && build=$i
  done
  if [ -z "$build" ]; then 
    echo "Can't find this files $buildList in $path (path list: $pathList). Bailing"
    exit -1
  fi

  wrap install $path/$build
fi
[ "$install_release" ] && wrap install $DIR/../releases/waivecardrive.apk
[ "$clear" ] && wrap clear
[ "$start" ] && wrap start
